{"version":3,"sources":["./src/app/product/product-form.component.ts","./src/app/product/product-form.component.html","./src/app/product/product-guard.service.ts","./src/app/product/product-list.component.ts","./src/app/product/product-list.component.html","./src/app/product/product.module.ts","./src/app/product/product.service.ts"],"names":[],"mappings":"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","file":"default~order-order-module~product-product-module-es2015.js","sourcesContent":["import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  ViewChildren,\n  ElementRef\n} from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControlName\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport \"rxjs/add/operator/debounceTime\";\nimport \"rxjs/add/observable/fromEvent\";\nimport \"rxjs/add/observable/merge\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Subscription } from \"rxjs/Subscription\";\n\nimport { Product } from \"./product\";\nimport { ProductService } from \"./product.service\";\n\nimport { NumberValidators } from \"../shared/number.validator\";\nimport { GenericValidator } from \"../shared/generic-validator\";\nimport { Category } from \"./index\";\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'product-form',\n  templateUrl: \"./product-form.component.html\",\n  styles: [\n    `\n    .title-spacer {\n      flex: 1 1 auto;\n    }\n  .form-field{\n      width: 100%;\n      margin-left: 20px;\n      margin-right: 20px;\n    }\n   \n    `\n  ]\n})\nexport class ProductFormComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChildren(FormControlName, { read: ElementRef })\n  formInputElements: ElementRef[];\n\n  pageTitle: string = \"Update Product\";\n  errorMessage: string;\n  productForm: FormGroup;\n\n  product: Product = <Product>{};\n  private sub: Subscription;\n  showImage: boolean;\n  categories: Category[];\n  fieldColspan = 4;\n  // Use with the generic validation messageId class\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } } = {\n    product: {\n      required: \"Product name is required.\",\n      minlength: \"Product name must be at least one characters.\",\n      maxlength: \"Product name cannot exceed 200 characters.\"\n    },\n    unitPrice: {\n      range:\n        \"Price of the product must be between 1 (lowest) and 9999 (highest).\"\n    },\n    unitInStock: {\n      range:\n        \"Quantity of the product must be between 1 (lowest) and 2000 (highest).\"\n    }\n  }\n\n  private genericValidator: GenericValidator;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private productService: ProductService,\n    private breakpointObserver: BreakpointObserver\n  ) {\n    breakpointObserver.observe([\n      Breakpoints.HandsetLandscape,\n      Breakpoints.HandsetPortrait\n    ]).subscribe(result => {\n      // console.log(result)\n      this.onScreensizeChange();\n    });\n\n\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n\n  ngOnInit(): void {\n    this.productForm = this.fb.group({\n      productName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(100)\n        ]\n      ],\n      unitPrice: [\"\", NumberValidators.range(1, 99999)],\n      unitInStock: [\"\", NumberValidators.range(1, 2000)],\n      categoryId: [\"\", NumberValidators.range(1, 9999999)],\n    });\n\n    // Read the product Id from the route parameter\n    this.sub = this.route.params.subscribe(params => {\n      let id = +params[\"id\"];\n      this.getProduct(id);\n    });\n\n    this.getCategories();\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    // Watch for the blur event from any input element on the form.\n    let controlBlurs: Observable<any>[] = this.formInputElements.map(\n      (formControl: ElementRef) =>\n        Observable.fromEvent(formControl.nativeElement, \"blur\")\n    );\n\n    // Merge the blur event observable with the valueChanges observable\n    Observable.merge(this.productForm.valueChanges, ...controlBlurs)\n      .debounceTime(800)\n      .subscribe(() => {\n        this.displayMessage = this.genericValidator.processMessages(\n          this.productForm\n        );\n      });\n  }\n\n  getProduct(id: number): void {\n    this.productService\n      .getProduct(id)\n      .subscribe(\n        (product: Product) => this.onProductRetrieved(product),\n        (error: any) => (this.errorMessage = <any>error)\n      );\n  }\n\n  getCategories(): void {\n    this.productService\n      .getCategories()\n      .subscribe(\n        categories => (this.categories = categories),\n        error => (this.errorMessage = <any>error)\n      );\n  }\n\n  onProductRetrieved(product: Product): void {\n    if (this.productForm) {\n      this.productForm.reset();\n    }\n    this.product = product;\n\n    if (this.product.id === 0) {\n      this.pageTitle = \"Add Product\";\n    } else {\n      this.pageTitle = `Update Product: ${this.product.productName} `;\n    }\n\n    // Update the data on the form\n    this.productForm.patchValue({\n      productName: this.product.productName,\n      unitPrice: this.product.unitPrice,\n      unitInStock: this.product.unitInStock,\n      categoryId: this.product.categoryId\n    });\n  }\n\n  deleteProduct(): void {\n    if (this.product.id === 0) {\n      // Don't delete, it was never saved.\n      this.onSaveComplete();\n    } else {\n      if (confirm(`Really delete the product: ${this.product.productName}?`)) {\n        this.productService\n          .deleteProduct(this.product.id)\n          .subscribe(\n            () => this.onSaveComplete(),\n            (error: any) => (this.errorMessage = <any>error)\n          );\n      }\n    }\n  }\n\n  saveProduct(): void {\n    if (this.productForm.dirty && this.productForm.valid) {\n      // Copy the form values over the product object values\n      let p = Object.assign({}, this.product, this.productForm.value);\n\n      this.productService\n        .saveProduct(p)\n        .subscribe(\n          () => this.onSaveComplete(),\n          (error: any) => (this.errorMessage = <any>error)\n        );\n    } else if (!this.productForm.dirty) {\n      this.onSaveComplete();\n    }\n  }\n\n  onSaveComplete(): void {\n    // Reset the form to clear the flags\n    this.productForm.reset();\n    this.router.navigate([\"/products\"]);\n  }\n\n  onScreensizeChange() {\n    // debugger\n    const isLess600 = this.breakpointObserver.isMatched('(max-width: 599px)');\n    const isLess1000 = this.breakpointObserver.isMatched('(max-width: 959px)');\n    console.log(\n      ` isLess600  ${isLess600} \n        isLess1000 ${isLess1000}  `\n    )\n    if (isLess1000) {\n      if (isLess600) {\n        this.fieldColspan = 12;\n      }\n      else {\n        this.fieldColspan = 6;\n      }\n    }\n    else {\n      this.fieldColspan = 3;\n    }\n  }\n}\n","<!-- <div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n        {{pageTitle}}\n    </div>\n\n    <div class=\"panel-body\">         -->\n<form novalidate (ngSubmit)=\"saveProduct()\" [formGroup]=\"productForm\">\n  <mat-card>\n    <!--   <mat-card-header> \n     <mat-card-title class=\"view-card-title\">\n      <h1>{{pageTitle }}</h1>\n    </mat-card-title>\n     </mat-card-header>   -->\n\n    <mat-toolbar style=\"background-color: #FFF\">\n      <mat-toolbar-row>\n        <span class=\"view-card-title\"> {{pageTitle}}</span>\n        <span class=\"title-spacer\"></span>\n\n        <mat-card-actions>\n          <button mat-mini-fab class=\"primary\" style=\"margin-right:10px; background-color:darkgray\" type=\"submit\"\n            [disabled]='!productForm.valid'>\n            <mat-icon>save</mat-icon>\n          </button>\n          <button mat-mini-fab class=\"\" style=\"margin-right:10px; \" [routerLink]=\"['/products']\">\n            <mat-icon>cancel</mat-icon>\n          </button>\n\n        </mat-card-actions>\n\n      </mat-toolbar-row>\n    </mat-toolbar>\n\n    <mat-card-content style=\"margin: 5 0 5 0px;\">\n      <div class=\"form-card\">\n        <mat-grid-list cols=\"12\" rowHeight=\"80px\">\n          <mat-grid-tile [colspan]=\"fieldColspan\">\n            <mat-form-field class=\"form-field\" appearance=\"outline\">\n              <mat-select placeholder=\"Select Category\" #categoryIdId formControlName=\"categoryId\"\n                [(value)]=\"product.categoryId\">\n                <mat-option *ngFor=\"let category of categories\" [value]=\"category.id\">\n                  {{category.categoryName}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile [colspan]=\"fieldColspan\">\n            <mat-form-field class=\"form-field\" appearance=\"outline\">\n              <input matInput id=\"productNameId\" type=\"text\" placeholder=\"Product Name (required)\"\n                formControlName=\"productName\" />\n              <mat-error *ngIf=\"displayMessage.productName\">\n                {{displayMessage.productName}}\n              </mat-error>\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile [colspan]=\"fieldColspan\">\n            <mat-form-field class=\"form-field\" appearance=\"outline\">\n              <input matInput id=\"unitPriceId\" type=\"currency\" placeholder=\"Price (required)\"\n                formControlName=\"unitPrice\" />\n              <mat-error *ngIf=\"displayMessage.unitPrice\">\n                {{displayMessage.unitPrice}}\n              </mat-error>\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile [colspan]=\"fieldColspan\">\n            <mat-form-field class=\"form-field\" appearance=\"outline\">\n              <input matInput id=\"unitInStockId\" type=\"number\" placeholder=\"Quantity In Stock (required)\"\n                formControlName=\"unitInStock\" />\n              <mat-error *ngIf=\"displayMessage.unitInStock\">\n                {{displayMessage.unitInStock}}\n              </mat-error>\n            </mat-form-field>\n          </mat-grid-tile>\n        </mat-grid-list>\n    </div>\n\n      <div class='has-error' *ngIf='errorMessage'>{{errorMessage}}</div>\n    </mat-card-content>\n\n\n\n  </mat-card>\n\n</form>\n\n<!-- <div class='has-error' *ngIf='errorMessage'>{{errorMessage}}</div>\n    </div>\n</div> -->\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, CanDeactivate } from '@angular/router';\n\nimport { ProductFormComponent } from './product-form.component';\n\n@Injectable()\nexport class ProductDetailGuard implements CanActivate {\n\n    constructor(private router: Router) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        let id = +route.url[1].path;\n        if (isNaN(id) || id < 1) {\n            alert('Invalid product Id');\n            // start a new navigation to redirect to list pcustomerId\n            this.router.navigate(['/products']);\n            // abort current navigation\n            return false;\n        };\n        return true;\n    }\n}\n\n@Injectable()\nexport class ProductEditGuard implements CanDeactivate<ProductFormComponent> {\n\n    canDeactivate(component: ProductFormComponent): boolean {\n        if (component.productForm.dirty) {\n            let productName = component.productForm.get('productName').value || 'New Product';\n            return confirm(`Navigate away and lose all changes to ${productName}?`);\n        }\n        return true;\n    }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { Product } from './product';\nimport { ProductService } from './product.service';\nimport { PagerService } from '../_services';\nimport { ConfirmDialog } from '../shared';\nimport * as _ from 'lodash';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\n\n\n@Component({\n    selector: 'product-list',\n    templateUrl: './product-list.component.html',\n    styleUrls: ['./product-list.component.css'],\n    providers: [ConfirmDialog]\n})\nexport class ProductListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    pageTitle: string = 'Products';\n\n    showImage: boolean = false;\n    listFilter: any = {};\n    errorMessage: string;\n\n    products: Product[];\n    productList: Product[];\n\n    displayedColumns = [\"productName\", \"unitPrice\", \"unitInStock\", \"categoryName\", \"id\"];\n    dataSource: any = null;\n    pager: any = {};\n    pagedItems: any[];\n    searchFilter: any = {};\n    selectedOption: string;\n\n\n\n    constructor(\n        private productService: ProductService,\n        // private pagerService: PagerService,\n        public dialog: MatDialog, public snackBar: MatSnackBar) {\n    }\n\n    toggleImage(): void {\n        this.showImage = !this.showImage;\n    }\n\n    applyFilter(filterValue: string) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n\n    freshDataList(products: Product[]) {\n        this.products = products;\n\n        this.productList = products.map(e => {\n            const product = e;\n            e[\"categoryName\"] = e[\"category\"][\"categoryName\"];\n            return product;\n        });\n\n        this.dataSource = new MatTableDataSource(this.products);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    }\n\n\n    ngOnInit(): void {\n        this.productService.getProducts()\n            .subscribe(products => {\n                this.freshDataList(products);\n            },\n            error => this.errorMessage = <any>error);\n\n        this.searchFilter = {};\n        this.listFilter = {};\n    }\n\n    getProducts(pageNum?: number) {\n        this.productService.getProducts()\n            .subscribe(products => {\n                this.freshDataList(products);\n            },\n            error => this.errorMessage = <any>error);\n    }\n\n    searchProducts(filters: any) {\n        if (filters) {\n            this.productService.getProducts()\n                .subscribe(products => {\n                    this.products = products;\n                    console.log(this.products.length)\n                    this.products = this.products.filter((product: Product) => {\n                        let match = true;\n\n                        Object.keys(filters).forEach((k) => {\n                            match = match && filters[k] ?\n                                product[k] && product[k].toLocaleLowerCase().indexOf(filters[k].toLocaleLowerCase()) > -1 : match;\n                        })\n                        return match;\n                    });\n                    this.freshDataList(products);\n                },\n                error => this.errorMessage = <any>error);\n        }\n\n    }\n\n    resetListFilter() {\n        this.listFilter = {};\n        this.getProducts();\n    }\n\n    reset() {\n        this.listFilter = {};\n        this.searchFilter = {};\n        this.getProducts();\n    }\n\n    resetSearchFilter(searchPanel: any) {\n        searchPanel.toggle();\n        this.searchFilter = {};\n        this.getProducts();\n    }\n\n    openSnackBar(message: string, action: string) {\n        this.snackBar.open(message, action, {\n            duration: 1500,\n        });\n    }\n\n    openDialog(id: number) {\n        let dialogRef = this.dialog.open(ConfirmDialog,\n            { data: { title: 'Dialog', message: 'Are you sure to delete this item?' } });\n        dialogRef.disableClose = true;\n\n\n        dialogRef.afterClosed().subscribe(result => {\n            this.selectedOption = result;\n\n            if (this.selectedOption === dialogRef.componentInstance.ACTION_CONFIRM) {\n                this.productService.deleteProduct(id).subscribe(\n                    () => {\n                        this.productService.getProducts()\n                            .subscribe(products => {\n                                this.freshDataList(products);\n                            },\n                            error => this.errorMessage = <any>error);\n                        this.openSnackBar(\"The item has been deleted successfully. \", \"Close\");\n                    },\n                    (error: any) => {\n                        this.errorMessage = <any>error;\n                        console.log(this.errorMessage);\n                        this.openSnackBar(\"This item has not been deleted successfully. Please try again.\", \"Close\");\n                    }\n                );\n            }\n        });\n    }\n}\n","<!-- <mat-sidenav-container> -->\n<mat-card class='light' style=\"height: 100%;\">\n\n  <mat-card-header>\n    <mat-card-title class=\"view-card-title\">\n      <h1>{{pageTitle }}</h1>\n    </mat-card-title>\n  </mat-card-header>\n  <mat-toolbar>\n    <mat-toolbar-row>\n      <button mat-mini-fab style=\"margin-right:10px; background-color:#e07c9e\" [routerLink]=\"['/products/edit', 0]\">\n        <mat-icon>add</mat-icon>\n      </button>\n      <button mat-mini-fab style=\"margin-right:10px; background-color:#a28b6e\" (click)=\"sidenav.toggle()\">\n        <mat-icon>search</mat-icon>\n      </button>\n      <button mat-mini-fab style=\"margin-right:10px; background-color:darkgray\" (click)=\"reset()\">\n        <mat-icon>refresh</mat-icon>\n      </button>\n\n      <span class=\"title-spacer\"></span>\n      <mat-form-field appearance=\"standard\" class=\"search-form-fileld\">\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event.target.value)\">\n        <mat-icon>filter_list</mat-icon>\n      </mat-form-field>\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n  <mat-table #table [dataSource]=\"dataSource\" matSort>\n    <ng-container matColumnDef=\"productName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Product Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let product\">\n        <!-- <a [routerLink]=\"['/product', product.id]\"> -->\n        {{product.productName}}\n        <!-- </a> -->\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"unitPrice\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Price </mat-header-cell>\n      <mat-cell *matCellDef=\"let product\"> {{ product.unitPrice | currency:'AUD'}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"unitInStock\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Quantity In Stock </mat-header-cell>\n      <mat-cell *matCellDef=\"let product\"> {{ product.unitInStock | number: '0.0-0' }} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"categoryName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Category </mat-header-cell>\n      <mat-cell *matCellDef=\"let product\"> {{product.category.categoryName}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"id\">\n      <mat-header-cell *matHeaderCellDef style=\"justify-content:right;\">\n        <!-- <button mat-button style=\"color:white; background-color:darkgrey\" (click)=\"resetListFilter()\">Reset</button> -->\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let product\" style=\"justify-content:right;\">\n        <button mat-mini-fab style=\"background-color:teal; min-height: 30px;   margin: 5px;\"\n          [routerLink]=\"['/products/edit', product.id]\">\n          <mat-icon>edit</mat-icon>\n        </button>\n        <button mat-mini-fab style=\"background-color:lightblue; min-height: 30px;  margin: 5px;\"\n          (click)=\"openDialog(product.id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n  <mat-paginator #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10]\">\n  </mat-paginator>\n\n</mat-card>\n<mat-sidenav class=\"search-panel\" position=\"end\" dark #sidenav mode=\"push\" opened=\"false\">\n\n  <mat-card class=\"profile-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"avatar\">\n        <mat-icon>search</mat-icon>\n      </div>\n      <mat-card-title>\n        Advanced Search\n      </mat-card-title>\n    </mat-card-header>\n  </mat-card>\n  <mat-nav-list style=\"margin-left:20px;\">\n    <mat-form-field>\n      <input matInput type=\"text\" placeholder=\"Product Name\" style=\"width:200px;\" name=\"product\"\n        [(ngModel)]=\"searchFilter.productName\" #product />\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"text\" placeholder=\"Price\" style=\"width:200px;\" name=\"price\" [(ngModel)]=\"searchFilter.price\"\n        #price />\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"text\" placeholder=\"Qunantity\" style=\"width:200px;\" name=\"quantity\"\n        [(ngModel)]=\"searchFilter.quantity\" #price />\n    </mat-form-field>\n\n  </mat-nav-list>\n\n  <mat-divider></mat-divider>\n  <mat-card-header>\n    <mat-action-list>\n      <button mat-raised-button style=\"color:lightgrey; background-color:darkgreen; margin:5px;\"\n        (click)=\"searchProducts(searchFilter);sidenav.toggle()\">\n        <mat-icon>search</mat-icon>Search\n      </button>\n      <button mat-raised-button style=\"color:lightgrey; background-color:darkred;margin:5px;\"\n        (click)=\"resetSearchFilter(sidenav)\">\n        <mat-icon>refresh</mat-icon>Reset\n      </button>\n    </mat-action-list>\n  </mat-card-header>\n</mat-sidenav>\n<!-- </mat-sidenav-container> -->\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\nimport { ProductListComponent } from \"./product-list.component\";\nimport { ProductDetailGuard, ProductEditGuard } from \"./product-guard.service\";\nimport { ProductFormComponent } from \"./product-form.component\";\n\nimport { ProductService } from \"./product.service\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { MaterialModule } from \"../shared/material.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    RouterModule.forChild([\n      { path: \"\", component: ProductListComponent },\n      {\n        path: \"edit/:id\",\n        canDeactivate: [ProductEditGuard],\n        component: ProductFormComponent\n      }\n    ])\n  ],\n  declarations: [\n    /**\n     * Components / Directives/ Pipes\n     */\n    ProductListComponent,\n    ProductFormComponent\n  ],\n  providers: [ProductService, ProductDetailGuard, ProductEditGuard],\n  exports: [\n    ProductListComponent,\n    ProductFormComponent,\n  ]\n})\nexport class ProductModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BackendService } from '../_services'\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\nimport { Product, Category } from './product';\n\n@Injectable()\nexport class ProductService {\n  private basicAction = 'products/';\n\n  constructor(private http: HttpClient, private backend: BackendService) { }\n\n  getProducts(): Observable<Product[]> {\n    // return this.http.get(this.baseUrl)\n    const action = `${this.basicAction}?_expand=category`;\n    return this.backend.getAll(action)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  getProduct(id: number): Observable<Product> {\n    if (id === 0) {\n      return Observable.of(this.initializeProduct());\n    };\n    const action = `${this.basicAction}${id}?_expand=category`;\n    return this.backend.getByQuery(action)\n      .map(this.extractData)\n      // .do(data => console.log('getProduct: ' + JSON.stringify(data)))\n      .catch(this.handleError);\n  }\n\n  deleteProduct(id: number): Observable<Response> {\n    const action = `${this.basicAction}${id}`;\n    return this.backend.delete(action)\n      .catch(this.handleError);\n  }\n\n  saveProduct(product: Product): Observable<Product> {\n    // let headers = new Headers({ 'Content-Type': 'application/json' });\n    // let options = new RequestOptions({ headers: headers });\n\n    if (product.id === 0) {\n      return this.createProduct(product);\n    }\n    return this.updateProduct(product);\n  }\n\n  getCategories(): Observable<Category[]> {\n    // return this.http.get(this.baseUrl)\n    const action = 'categories/'\n    return this.backend.getAll(action)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  private createProduct(product: Product): Observable<Product> {\n    product.id = null;\n    return this.backend.create(this.basicAction, product)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  private updateProduct(product: Product): Observable<Product> {\n    const action = `${this.basicAction}${product.id}`;\n    return this.backend.update(action, product)\n      .map(() => product)\n      .catch(this.handleError);\n  }\n\n  private extractData(response: Response) {\n    let body : any = response.json ? response.json() : response;\n    return body.data ? body.data : (body || {});\n  }\n\n  private handleError(error: Response): Observable<any> {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    console.error(error);\n    return Observable.throw(error.json() || 'Server error');\n  }\n\n  initializeProduct(): Product {\n    // Return an initialized object\n    return {\n      id: 0,\n      avatar: null,\n      categoryId: 0,\n      productName: null,\n      unitPrice: 0,\n      unitInStock: 0,\n    };\n  }\n}\n"],"sourceRoot":"webpack:///"}